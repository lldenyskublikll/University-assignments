# Завдання до лабораторної роботи
#    Створити програму, яка:
#      1. Генерує випадкові і невипадкові масиви різними способами,
#         зазначеними в теоретичних відомостях.
#      2. Демонструє звернення до елементів масиву за допомогою індексів, в
#         тому числі від’ємних; виділення підмасивів як одновимірних, так і
#         багатовимірних масивів.
#      3. Демонструє основні арифметичні операції над масивами, а також роботу
#         методів reduce, accumulate, outer.
#      4. Вираховує статистичні характеристики, а саме, мінімальне і
#         максимальне значення, вибіркові середнє, дисперсію,
#         середньоквадратичне відхилення, медіану та 25 та 75 персентилі,
#         величини ширина пелюстки (petal_width) з набору даних щодо квіток
#         ірису (iris.csv).

import numpy as np
import pandas as pd

# Завдання №1: 
#   Створити програму, яка генерує випадкові і невипадкові масиви різними 
#   способами, зазначеними в теоретичних відомостях.

#   Не випадкові масиви, створені за певними умовами:
print("\nЗАВДАННЯ №1:\nМасив без певних умов:")
arr_1 = np.array([[2, 5, 9], [3, 1, 6], [8, 4, 7]])
print(arr_1)

print("\nМасив, який починається із 8 та закінчується на 64 із кроком 8:")
arr_2 = np.arange(8,64,8)
print(arr_2)

print("\nМасив, який складається із 20 одиниць типу int:")
arr_3 = np.ones(20, dtype = int)
print(arr_3)

print("\nТрьохвимірний масив, який містить у рядку по 3 нулі типу float:")
arr_4 = np.zeros((3, 3), dtype = float)
print(arr_4)

print("\nМасив з 6 значень, розміщених рівномірно між 0 та 3:")
arr_5 = np.linspace(0, 3, 6)
print(arr_5)

#   Випадкові масиви, створені за певними умовами:
print("\nМасив 5х4 із випадкових чисел від 0 до 1:")
arr_6 = np.random.random((5,4))
print(arr_6)

print("\nMасив 5х6 з випадкових цілих чисел від 20 до 80:")
arr_7 = np.random.randint(20, 80, (5,6))
print(arr_7)

#   Порожній масив:
print("\nПорожній масив з 7 елементів (елементи == випадковий вміст комірок памʼяті)")
arr_8 = np.empty(7)
print(arr_8)

# Завдання №2:
#   Створити програму, яка демонструє звернення до елементів масиву за 
#   допомогою індексів, в тому числі від’ємних; виділення підмасивів як 
#   одновимірних, так і багатовимірних масивів.

print("\n\nЗАВДАННЯ №2:\nМасив 3х3 для демонстрації роботи методів:")
arr_9 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print(arr_9)
print("\nРозмір масиву:")
print(arr_9.shape)

print("\nДоступ за індексами arr[2][2], arr[2][-3], arr[-3][-1]:")
print("Array ([2][2]) = ", arr_9[2][2], "\nArray ([2][-3]) = ", arr_9[2][-3], "\nArray ([-3][-1]) = ", arr_9[-3][-1])

print("\nВиділення підмасиву за допомогою зрізу 0:1:")
arr_10 = arr_9[0:1]  # Отримаємо перший рядок
print(arr_10)

print("\nВиділення підмасиву з кожного рядка початкового масиву:")
arr_11 = [row[1:2] for row in arr_9]
print(arr_11)

# Завдання №3:
#   Створити програму, яка демонструє основні арифметичні операції над масивами, 
#   а також роботу методів reduce, accumulate, outer.

#   Створення нового масиву для виконання основних арифметичних операцій:
print("\n\nЗАВДАННЯ №3:\nМасив із 5 одиниць:")
arr_12 = np.ones(5)
print(arr_12)

print("\nДодати до елементів масиву 4:")
arr_12 = arr_12 + 4
print(arr_12)

print("\nВідняти від елементів масиву 3:")
arr_12 = arr_12 - 3
print(arr_12)

print("\nПомножити елементи масиву на 2.5:")
arr_12 = arr_12 * 2.5
print(arr_12)

print("\nПоділити елементи масиву на 5:")
arr_12 = arr_12 / 5
print(arr_12)

#   Створення нового масиву для роботи з методами reduce, accumulate, outer:
print("\nСтворимо новий масив для роботи з методами reduce, accumulate, outer:")
arr_13 = np.linspace(1, 15, 18)
print(arr_13)

print("\nМетод Аccumulate - додати всі елементи масива і зберегти кроки:")
print(np.add.accumulate(arr_13))

print("\nМетод Мultiply - помножити всі елементи масива без збереження кроків:")
print(np.multiply.reduce(arr_13))

print("\nМетод Divide - поділити всі значення на 4:")
print(np.divide.outer(arr_13, 4))

# Завдання №4: 
#   Створити програму, яка dираховує статистичні характеристики, а саме, 
#   мінімальне і максимальне значення, вибіркові середнє, дисперсію,
#   середньоквадратичне відхилення, медіану та 25 та 75 персентилі,
#   величини ширина пелюстки (petal_width) з набору даних щодо квіток
#   ірису (iris.csv).

#   Створення масиву зі значеннями petal_width з файлу iris.csv:
iris_data = pd.read_csv('iris.csv')
petal_width = np.array(iris_data['petal_width'])

#   Статистичні характеристики:
min_value = np.min(petal_width)                  # мінімальне значення
max_value = np.max(petal_width)                  # максимальне значення
mean_value = np.mean(petal_width)                # вибіркове середнє
variance = np.var(petal_width)                   # дисперсія
std_deviation = np.std(petal_width)              # середньоквадратичне відхилення
median = np.median(petal_width)                  # медіана
percentile_25 = np.percentile(petal_width, 25)   # 25 персентиль
percentile_75 = np.percentile(petal_width, 75)   # 75 персентиль

#   Виводимо результати:
print("\n\nЗАВДАННЯ №4:")
print(f"Мінімальне значення: {min_value}")
print(f"Максимальне значення: {max_value}")
print(f"Вибіркове середнє: {mean_value}")
print(f"Дисперсія: {variance}")
print(f"Середньоквадратичне відхилення: {std_deviation}")
print(f"Медіана: {median}")
print(f"25-й персентиль: {percentile_25}")
print(f"75-й персентиль: {percentile_75}")